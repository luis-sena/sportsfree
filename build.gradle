plugins {
    id "org.springframework.boot" version "2.5.5"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "java"
    id "com.adarshr.test-logger" version "3.0.0"
    id "org.sonarqube" version "3.3"
    id 'jacoco'
}

group = "br.com.sportsfree"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "11"

ext {
    lombokVersion = "1.18.22"
    postgresVersion = '42.2.24.jre7'
    h2Version = "1.4.200"
    firebaseVersion = "8.1.0"
    springSecurityVersion = "5.6.1"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: "org.springframework.boot", name: "spring-boot-starter-web"
    implementation group: "org.springframework.boot", name: "spring-boot-starter-data-jpa"
    implementation group: "org.springframework.boot", name: "spring-boot-starter-validation"
    implementation group: "org.springframework.boot", name: "spring-boot-starter-security"
    implementation group: "org.springframework.boot", name: "spring-boot-starter-oauth2-resource-server"

    implementation group: "com.google.firebase", name: "firebase-admin", version: firebaseVersion

    compileOnly group: "org.projectlombok", name: "lombok", version: lombokVersion
    developmentOnly group: "org.springframework.boot", name: "spring-boot-devtools"
    runtimeOnly group:  "org.postgresql", name: "postgresql", version: postgresVersion
    annotationProcessor group: "org.projectlombok", name: "lombok", version: lombokVersion

    testImplementation group: "org.springframework.boot", name: "spring-boot-starter-test"
    testImplementation group: "org.springframework.security", name: 'spring-security-test', version: springSecurityVersion
    testImplementation group: "org.projectlombok", name: "lombok", version: lombokVersion
    testRuntimeOnly group: "com.h2database", name: "h2", version: h2Version
}

jar {
    enabled = false
}

test {
    useJUnitPlatform()
    environment 'GOOGLE_APPLICATION_CREDENTIALS','/home/lsena/Projects/ESD21/bootcamp-software-engineering-project/SportFree/firebase_config.json'
    testlogger {
        theme 'mocha'
    }
}

test.finalizedBy jacocoTestReport

sonarqube {
    properties {
        property "sonar.projectKey", "sportsfree"
        property "sonar.organization", "luis-sena"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.language", "java"
        property "sonar.core.codeCoveragePlugin", "jacoco"
        property "sonar.jacoco.reportPaths", "${buildDir}/jacoco/test.exec"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/jacoco.xml"
        property "sonar.coverage.exclusions", "**/br/com/sportsfree/dto/**,**/br/com/sportsfree/entity/**,**/br/com/sportsfree/handler/**,**/br/com/sportsfree/error/**"
        property "sonar.qualitygate.wait","true"
    }
}

tasks.named('sonarqube').configure {
    dependsOn test
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        xml.destination file("${buildDir}/reports/jacoco/jacoco.xml")
        html.outputLocation = layout.buildDirectory.dir('jacoco')
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2020.0.4"
    }
}

